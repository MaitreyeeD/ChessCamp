# Phase 4
before_script:
# Print status
  - echo -e "\e[33m+------------------------+\n|   SETTING UP PROJECT   |\n+------------------------+\e[0m"
# Install gems the Docker image may not have
  - bundle install --gemfile=Gemfile
# Set up the test database
  - rails db:test:prepare
  - rails db:migrate:reset
# Remove unnecessary files (causes coverage report to check for non-model code too which will give wrong %)
  - rm -rf ./app/jobs && rm -rf ./app/channels && rm -rf ./app/mailers && rm -rf ./app/helpers

test:
  script:
# Print status
    - echo -e "\e[33m+------------------------------+\n|   RUNNING THEIR UNIT TESTS   |\n+------------------------------+\e[0m"
# Run their unit tests, if our solution project exists (autograding) then continue otherwise return rake test's exit code
    - rails test test/models || [ -d /home/sol ]
# If our solution project exists, print status
    - if [ -d /home/sol ]; then echo -e "\e[33m+----------------------------+\n|   RUNNING OUR UNIT TESTS   |\n+----------------------------+\e[0m"; fi
# If our solution project exists, copy our test suite over and run against their project
    - if [ -d /home/sol ]; then rm -rf ./test && cp -r /home/sol/test ./ && rails test test/models; fi
